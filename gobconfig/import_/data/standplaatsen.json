{
  "version": "0.1",
  "catalogue": "bag",
  "entity": "standplaatsen",
  "source": {
    "application": "Neuron",
    "enrich": {
      "amsterdamse_sleutel": {
        "type": "autoid",
        "on": "identificatie",
        "template": "0363084XXXXXXX"
      }
    },
    "entity_id": "identificatie",
    "name": "AMSBI",
    "query": [
      "      SELECT s.standplaatsnummer                                                                    AS identificatie",
      "    ,      s.standplaatsvolgnummer                                                                AS volgnummer",
      "    ,      s.indgeconstateerd                                                                     AS geconstateerd",
      "    ,      to_char(s.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')                                        AS begin_geldigheid",
      "    ,      to_char(q2.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')                                       AS eind_geldigheid",
      "    ,      CASE WHEN UPPER(io.aanduiding_in_onderzoek) like '%J%'",
      "      THEN 'J'",
      "      ELSE 'N'",
      "      END                                                                               AS aanduiding_in_onderzoek",
      "    ,      io.heeft_onderzoeken                                                                   AS heeft_onderzoeken",
      "    ,      t.status                                                                               AS status_code",
      "    ,      t.omschrijving                                                                         AS status_omschrijving",
      "    ,      q1.adresnummer                                                                         AS nummeraanduidingid_hoofd",
      "    ,      q2.adresnummer                                                                         AS nummeraanduidingid_neven",
      "    ,      sdo_util.to_wktgeometry(s.geometrie)                                                   AS geometrie",
      "    ,      to_char(s.dd_document, 'YYYY-MM-DD')                                                   AS documentdatum",
      "    ,      s.documentnummer                                                                       AS documentnummer",
      "    ,      TRIM(nvl(regexp_substr(s.documentnummer, '^(.*?)_', 1, 1, NULL, 1), s.documentnummer)) AS dossier",
      "    ,      s.bagproces                                                                            AS bagproces_code",
      "    ,      m.omschrijving                                                                         AS bagproces_omschrijving",
      "    ,      to_char(s.creation, 'YYYY-MM-DD HH24:MI:SS')                                           AS registratiedatum",
      "    ,      s.standplaats_id                                                                       AS source_id",
      "    ,      NVL2(q2.datumopvoer,",
      "      CASE WHEN q2.datumopvoer < sysdate THEN",
      "      to_char(q2.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')",
      "      ELSE to_char(s.modification, 'YYYY-MM-DD HH24:MI:SS') END",
      "    ,CASE WHEN s.status = 2 THEN",
      "      CASE WHEN q2.datumopvoer < sysdate THEN",
      "      to_char(s.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')",
      "      ELSE to_char(s.creation, 'YYYY-MM-DD HH24:MI:SS') END",
      "      ELSE NULL END)                                                               AS expirationdate",
      "      FROM   basis.standplaats s",
      "      -- begindatum gebruiken als einddatum volgende cyclus",
      "      JOIN  (SELECT x.standplaatsnummer",
      "    ,      x.standplaatsvolgnummer",
      "    ,      dense_rank() OVER (partition BY x.standplaatsnummer ORDER BY x.standplaatsvolgnummer) +1 AS rang",
      "      FROM   basis.standplaats x",
      "      WHERE  x.indauthentiek = 'J') q1 ON s.standplaatsnummer = q1.standplaatsnummer",
      "      AND s.standplaatsvolgnummer = q1.standplaatsvolgnummer",
      "      LEFT OUTER JOIN  (SELECT y.standplaatsnummer",
      "    ,      y.standplaatsvolgnummer",
      "    ,      y.datumopvoer",
      "    ,      dense_rank() OVER (partition BY y.standplaatsnummer ORDER BY y.standplaatsvolgnummer) AS rang",
      "      FROM   basis.standplaats y",
      "      WHERE  y.indauthentiek = 'J') q2 ON  q1.standplaatsnummer = q2.standplaatsnummer",
      "      AND q1.rang = q2.rang",
      "      -- selecteren status",
      "      LEFT OUTER JOIN basis.standplaatsstatus t  ON s.status = t.status",
      "      -- selecteren bagproces / mutatiereden",
      "      LEFT OUTER JOIN basis.mutatiereden m ON s.bagproces = m.id",
      "      -- selecteren hoofdadres(sen)",
      "      LEFT OUTER JOIN (SELECT sa.standplaats_id",
      "    ,      sa.standplaatsvolgnummer",
      "    ,      a.adresnummer",
      "      FROM   basis.standplaats_adres sa",
      "      JOIN  (SELECT adres_id, adresnummer",
      "      FROM   basis.adres",
      "      WHERE  indauthentiek = 'J'",
      "      GROUP BY adres_id, adresnummer) a ON a.adres_id = sa.adres_id",
      "      WHERE  sa.indhoofdadres = 'J') q1  ON s.standplaats_id = q1.standplaats_id",
      "      AND s.standplaatsvolgnummer = q1.standplaatsvolgnummer",
      "      -- selecteren nevenadres(sen)",
      "      LEFT OUTER JOIN (SELECT sa.standplaats_id",
      "    ,      sa.standplaatsvolgnummer",
      "    ,      listagg(a.adresnummer, ';') WITHIN GROUP (ORDER BY sa.standplaats_id,sa.standplaatsvolgnummer) AS adresnummer",
      "      FROM   basis.standplaats_adres sa",
      "      JOIN  (SELECT adres_id, adresnummer",
      "      FROM   basis.adres",
      "      WHERE  indauthentiek = 'J'",
      "      GROUP BY adres_id, adresnummer) a ON a.adres_id = sa.adres_id",
      "      WHERE  sa.indhoofdadres = 'N'",
      "      GROUP BY sa.standplaats_id, sa.standplaatsvolgnummer) q2  ON s.standplaats_id = q2.standplaats_id",
      "      AND s.standplaatsvolgnummer = q2.standplaatsvolgnummer",
      "      -- selecteren onderzoeken",
      "      LEFT OUTER JOIN (SELECT o.object_identificatie",
      "    ,      o.begin_geldigheid",
      "    ,      o.eind_geldigheid",
      "    ,      listagg(o.inonderzoek, ';') WITHIN GROUP (ORDER BY o.object_identificatie, o.versie_identificatie) AS aanduiding_in_onderzoek",
      "    ,      listagg(o.identificatie, ';') WITHIN GROUP (ORDER BY o.object_identificatie) AS heeft_onderzoeken",
      "      FROM   lvbag.inonderzoek o",
      "      JOIN  (SELECT z.object_identificatie",
      "    ,      z.begin_geldigheid",
      "    ,      max(z.versie_identificatie) as max_versie_identificatie",
      "      FROM   lvbag.inonderzoek z",
      "      WHERE  z.objecttype = 112",
      "      GROUP BY z.object_identificatie, z.begin_geldigheid) y ON  o.object_identificatie = y.object_identificatie",
      "      AND o.versie_identificatie = y.max_versie_identificatie",
      "      WHERE  o.objecttype = 112",
      "      GROUP BY o.object_identificatie, o.begin_geldigheid, o.eind_geldigheid) io ON s.standplaatsnummer = io.object_identificatie AND (",
      "      ( io.begin_geldigheid < nvl(to_char(q2.datumopvoer, 'YYYY-MM-DD'), '2199-12-31') AND",
      "      nvl(io.eind_geldigheid, '2199-12-31') > to_char(s.datumopvoer, 'YYYY-MM-DD') ) OR",
      "      ( io.begin_geldigheid = to_char(s.datumopvoer, 'YYYY-MM-DD') AND",
      "      nvl(io.eind_geldigheid, io.begin_geldigheid) <= nvl(to_char(q2.datumopvoer, 'YYYY-MM-DD'), '2199-12-31') )",
      "      )",
      "      WHERE s.indauthentiek = 'J'"
    ],
    "recent": [
      "      AND (s.creation >= sysdate - 10 OR  s.modification >= sysdate - 10)"
    ],
    "schema": "Neuron"
  },
  "gob_mapping": {
    "identificatie": {
      "source_mapping": "identificatie"
    },
    "volgnummer": {
      "source_mapping": "volgnummer"
    },
    "amsterdamse_sleutel": {
      "source_mapping": "amsterdamse_sleutel"
    },
    "geconstateerd": {
      "source_mapping": "geconstateerd",
      "format": "JN"
    },
    "begin_geldigheid": {
      "source_mapping": "begin_geldigheid",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "eind_geldigheid": {
      "source_mapping": "eind_geldigheid",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "aanduiding_in_onderzoek": {
      "source_mapping": "aanduiding_in_onderzoek",
      "format": "JN"
    },
    "status": {
      "source_mapping": {
        "code": "status_code",
        "omschrijving": "status_omschrijving"
      }
    },
    "heeft_hoofdadres": {
      "source_mapping": {
        "bronwaarde": "nummeraanduidingid_hoofd"
      }
    },
    "heeft_nevenadres": {
      "source_mapping": {
        "bronwaarde": "nummeraanduidingid_neven"
      }
    },
    "geometrie": {
      "source_mapping": "geometrie"
    },
    "documentdatum": {
      "source_mapping": "documentdatum"
    },
    "documentnummer": {
      "source_mapping": "documentnummer"
    },
    "ligt_in_buurt": {
      "source_mapping": {
        "bronwaarde": "=geometrie"
      }
    },
    "heeft_dossier": {
      "source_mapping": {
        "bronwaarde": "dossier"
      }
    },
    "bagproces": {
      "source_mapping": {
        "code": "bagproces_code",
        "omschrijving": "bagproces_omschrijving"
      }
    },
    "registratiedatum": {
      "source_mapping": "registratiedatum",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "_expiration_date": {
      "source_mapping": "expirationdate",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "heeft_onderzoeken": {
      "source_mapping": {
        "bronwaarde": "heeft_onderzoeken"
      }
    }
  }
}