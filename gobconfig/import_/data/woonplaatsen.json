{
  "version": "0.1",
  "catalogue": "bag",
  "entity": "woonplaatsen",
  "source": {
    "name": "AMSBI",
    "application": "Neuron",
    "entity_id": "identificatie",
    "schema": "Neuron",
    "enrich": {
      "amsterdamse_sleutel": {
        "type": "autoid",
        "on": "identificatie",
        "template": "0363089XXXXXXX",
        "dry_run": true
      }
    },
    "query": [
"    SELECT w.woonplaatsnummer                                                                     AS identificatie",
"    ,      w.woonplaatsvolgnummer                                                                 AS volgnummer",
"    ,      s.status                                                                               AS status_code",
"    ,      s.omschrijving                                                                         AS status_omschrijving",
"    ,      to_char(w.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')                                        AS begin_geldigheid",
"    ,      to_char(q2.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')                                       AS eind_geldigheid",
"    ,      CASE WHEN UPPER(io.aanduiding_in_onderzoek) like '%J%'",
"                THEN 'J'",
"                ELSE 'N'",
"                END                                                                               AS aanduiding_in_onderzoek",
"    ,      io.heeft_onderzoeken                                                                   AS heeft_onderzoeken",
"    ,      w.indgeconstateerd                                                                     AS geconstateerd",
"    ,      to_char(w.dd_document, 'YYYY-MM-DD')                                                   AS documentdatum",
"    ,      w.documentnummer                                                                       AS documentnummer",
"    ,      TRIM(NVL(regexp_substr(w.documentnummer, '^(.*?)_', 1, 1, NULL, 1), w.documentnummer)) AS dossier",
"    ,      w.naam                                                                                 AS naam",
"    ,      w.woonplaats_ptt                                                                       AS naam_ptt",
"    ,      '0363'                                                                                 AS ligt_in_gemeente",
"    ,      to_char(w.creation, 'YYYY-MM-DD HH24:MI:SS')                                           AS registratiedatum",
"    ,      w.woonplaats_id                                                                        AS source_id",
"    ,      NVL2(q2.datumopvoer,",
"               CASE WHEN q2.datumopvoer < sysdate THEN",
"                         to_char(q2.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')",
"                    ELSE to_char(w.modification, 'YYYY-MM-DD HH24:MI:SS') END",
"               ,CASE WHEN s.status = 2 THEN",
"                          CASE WHEN q2.datumopvoer < sysdate THEN",
"                                    to_char(w.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')",
"                               ELSE to_char(w.creation, 'YYYY-MM-DD HH24:MI:SS') END",
"                     ELSE NULL END)                                                               AS expirationdate",
"    ,      w.bagproces                                                                            AS bagproces_code",
"    ,      m.omschrijving                                                                         AS bagproces_omschrijving",
"    ,      sdo_util.to_wktgeometry(geometrie)                                                     AS geometrie",
"      FROM   basis.woonplaats w",
"      -- begindatum gebruiken als einddatum volgende cyclus",
"      JOIN  (SELECT x.woonplaatsnummer",
"    ,      x.woonplaatsvolgnummer",
"    ,      dense_rank() OVER (partition BY x.woonplaatsnummer ORDER BY x.woonplaatsvolgnummer) +1 AS rang",
"      FROM   basis.woonplaats x",
"      WHERE  x.indauthentiek = 'J') q1 ON w.woonplaatsnummer = q1.woonplaatsnummer",
"      AND w.woonplaatsvolgnummer = q1.woonplaatsvolgnummer",
"      LEFT OUTER JOIN  (SELECT y.woonplaatsnummer",
"    ,      y.woonplaatsvolgnummer",
"    ,      y.datumopvoer",
"    ,      dense_rank() OVER (partition BY y.woonplaatsnummer ORDER BY y.woonplaatsvolgnummer) AS rang",
"      FROM   basis.woonplaats y",
"      WHERE  y.indauthentiek = 'J') q2 ON  q1.woonplaatsnummer = q2.woonplaatsnummer",
"      AND q1.rang = q2.rang",
"      -- selecteren status",
"      LEFT OUTER JOIN basis.woonplaatsstatus s ON w.status_id = s.status",
"      -- selecteren bagproces / mutatiereden",
"      LEFT OUTER JOIN basis.mutatiereden m ON w.bagproces = m.id",
"      -- selecteren onderzoeken",
"      LEFT OUTER JOIN (SELECT o.object_identificatie",
"    ,      o.begin_geldigheid",
"    ,      o.eind_geldigheid",
"    ,      listagg(o.inonderzoek, ';') WITHIN GROUP (ORDER BY o.object_identificatie, o.versie_identificatie) AS aanduiding_in_onderzoek",
"    ,      listagg(o.identificatie, ';') WITHIN GROUP (ORDER BY o.object_identificatie) AS heeft_onderzoeken",
"      FROM   lvbag.inonderzoek o",
"      JOIN  (SELECT z.object_identificatie",
"    ,      z.begin_geldigheid",
"    ,      max(z.versie_identificatie) as max_versie_identificatie",
"      FROM   lvbag.inonderzoek z",
"      WHERE  z.objecttype = 113",
"      GROUP BY z.object_identificatie, z.begin_geldigheid) y ON  o.object_identificatie = y.object_identificatie",
"      AND o.versie_identificatie = y.max_versie_identificatie",
"      WHERE  o.objecttype = 113",
"      GROUP BY o.object_identificatie, o.begin_geldigheid, o.eind_geldigheid) io ON w.woonplaatsnummer = io.object_identificatie AND (",
"      ( io.begin_geldigheid < nvl(to_char(q2.datumopvoer, 'YYYY-MM-DD'), '2199-12-31') AND",
"      nvl(io.eind_geldigheid, '2199-12-31') > to_char(w.datumopvoer, 'YYYY-MM-DD') ) OR",
"      ( io.begin_geldigheid = to_char(w.datumopvoer, 'YYYY-MM-DD') AND",
"      nvl(io.eind_geldigheid, io.begin_geldigheid) <= nvl(to_char(q2.datumopvoer, 'YYYY-MM-DD'), '2199-12-31') )",
"      )",
"      WHERE  w.indauthentiek = 'J'"
    ],
    "recent": [
"      AND (w.creation >= sysdate - 10 OR  w.modification >= sysdate - 10)"
    ]
  },
  "gob_mapping": {
    "identificatie": {
      "source_mapping": "identificatie"
    },
    "volgnummer": {
      "source_mapping": "volgnummer"
    },
    "amsterdamse_sleutel": {
      "source_mapping": "amsterdamse_sleutel"
    },
    "naam": {
      "source_mapping": "naam"
    },
    "woonplaats_ptt": {
      "source_mapping": "naam_ptt"
    },
    "status": {
      "source_mapping": {
        "code": "status_code",
        "omschrijving": "status_omschrijving"
      }
    },
    "geconstateerd": {
      "source_mapping": "geconstateerd"
    },
    "aanduiding_in_onderzoek": {
      "source_mapping": "aanduiding_in_onderzoek",
      "format": "JN"
    },
    "documentdatum": {
      "source_mapping": "documentdatum"
    },
    "documentnummer": {
      "source_mapping": "documentnummer"
    },
    "geometrie": {
      "source_mapping": "geometrie"
    },
    "begin_geldigheid": {
      "source_mapping": "begin_geldigheid",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "eind_geldigheid": {
      "source_mapping": "eind_geldigheid",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "heeft_dossier": {
      "source_mapping": {
        "bronwaarde": "dossier"
      }
    },
    "bagproces": {
      "source_mapping": {
        "code": "bagproces_code",
        "omschrijving": "bagproces_omschrijving"
      }
    },
    "registratiedatum": {
      "source_mapping": "registratiedatum",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "ligt_in_gemeente": {
      "source_mapping": {
        "bronwaarde": "ligt_in_gemeente"
      }
    },
    "_expiration_date": {
      "source_mapping": "expirationdate",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "heeft_onderzoeken": {
      "source_mapping": {
        "bronwaarde": "heeft_onderzoeken"
      }
    }
  }
}
